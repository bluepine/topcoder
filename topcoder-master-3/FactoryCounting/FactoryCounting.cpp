#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

int c[30][30];
int s[30];
int N;

class FactoryCounting {
public:
	long long count(int n, int m, vector<string> county) {
	    N = county.size();
		for (int i = 0; i < N; i++)
			c[i][0] = c[i][i] = 1;
		for (int i = 1; i < N; i++)
			for (int j = 1; j < i; j++)
				c[i][j] = c[i-1][j-1]+c[i-1][j];

		for (int i = 0; i < N; i++) {
			s[i] = 0;
			for (int j = 0; j < N; j++)
				if (county[i][j] == 'Y')
					s[i] |= (1<<j);
		}

		long long res = 0;
		go(n, m, 0, 0, (1<<N)-1, 0, res);
		return res;
	}

	void go(int n, int m, int i, int x, int y, int k, long long & res) {
		if (k == n) {
			res += c[cnt(y)][m];
			return;
		}

		if (i == N) return;

		go(n, m, i+1, x, y, k, res);
		go(n, m, i+1, x|(1<<i), y&s[i], k+1, res);
	}

	int cnt(int x) {
		int res = 0;
		while (x) {
			x &= (x-1);
			res++;
		}
		return res;
	}
};


// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
#include <iostream>
#include <string>
#include <vector>
using namespace std;
bool KawigiEdit_RunTest(int testNum, int p0, int p1, vector <string> p2, bool hasAnswer, long long p3) {
	cout << "Test " << testNum << ": [" << p0 << "," << p1 << "," << "{";
	for (int i = 0; int(p2.size()) > i; ++i) {
		if (i > 0) {
			cout << ",";
		}
		cout << "\"" << p2[i] << "\"";
	}
	cout << "}";
	cout << "]" << endl;
	FactoryCounting *obj;
	long long answer;
	obj = new FactoryCounting();
	clock_t startTime = clock();
	answer = obj->count(p0, p1, p2);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << p3 << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << answer << endl;
	if (hasAnswer) {
		res = answer == p3;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	} else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	} else if (hasAnswer) {
		cout << "Match :-)" << endl;
	} else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;

	int p0;
	int p1;
	vector <string> p2;
	long long p3;

	{
		// ----- test 0 -----
		p0 = 2;
		p1 = 1;
		string t2[] = {"NYY","YNY","YYN"};
		p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
		p3 = 3ll;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
	}

	{
		// ----- test 1 -----
		p0 = 2;
		p1 = 2;
		string t2[] = {"NYYYYN","YNYYNY","YYNYYY","YYYNYN","YNYYNY","NYYNYN"};
		p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
		p3 = 32ll;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
	}

	{
		// ----- test 2 -----
		p0 = 1;
		p1 = 1;
		string t2[] = {"NNNNYN","NNNYNN","NNNNYN","NYNNYN","YNYYNN","NNNNNN"};
		p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
		p3 = 8ll;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
	}

	{
		// ----- test 3 -----
		p0 = 3;
		p1 = 3;
		string t2[] = {"NYYYNYYNYY","YNYYYYYYYN","YYNYYYNYYN","YYYNYYNYNY","NYYYNYYYYY","YYYYYNYYNY","YYNNYYNYYN","NYYYYYYNNY","YYYNYNYNNY","YNNYYYNYYN"};
		p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
		p3 = 308ll;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
	}

	{
		// ----- test 4 -----
		p0 = 7;
		p1 = 8;
		string t2[] = {"NYYYYYNYYYYYNYYYYYYYYYYNYYYYYY","YNYYYYYYYYYYYYYYYNYYYYYYYYYYYY","YYNYYYYYYYYYYYYNYNYYYNNYYYNYYY","YYYNYYYYYYYYNYYYYYNYYYYYYNYYYY","YYYYNYYYYYYYYYNYYYYYYYYYYYNYYY","YYYYYNYYNYYYYNYYYYYNYYYYYYYNNY","NYYYYYNYYYYYYYYYNYYYYNYYYYYYYY","YYYYYYYNYYYYYYYYYYYYYYYYYYYYYY","YYYYYNYYNYYYYNNYYYYYYYYNYYNNYY","YYYYYYYYYNYYNYYNYNYYNYYYYYYYYY","YYYYYYYYYYNYYNYYYYYYYNYYYYYYYY","YYYYYYYYYYYNYYYYNYYYYYYYYYYYYY","NYYNYYYYYNYYNYYYNYNYYYYYNYYYYY","YYYYYNYYNYNYYNYYYYYYYYYYYNYYNY","YYYYNYYYNYYYYYNNNYYYYYYYYYYYYY","YYNYYYYYYNYYYYNNYNYYYYYNNYYYNY","YYYYYYNYYYYNNYNYNNYYNYYYYYNYNY","YNNYYYYYYNYYYYYNNNYYNYYYYYYYYY","YYYNYYYYYYYYNYYYYYNNYYNYYYYYYY","YYYYYNYYYYYYYYYYYYNNYYYYYYYYYY","YYYYYYYYYNYYYYYYNNYYNYYYYYNYYY","YYNYYYNYYYNYYYYYYYYYYNYYYYYYYY","YYNYYYYYYYYYYYYYYYNYYYNYYYYYYY","NYYYYYYYNYYYYYYNYYYYYYYNYYYYYY","YYYYYYYYYYYYNYYNYYYYYYYYNYYYYY","YYYNYYYYYYYYYNYYYYYYYYYYYNYYYY","YYNYNYYYNYYYYYYYNYYYNYYYYYNYYY","YYYYYNYYNYYYYYYYYYYYYYYYYYYNYY","YYYYYNYYYYYYYNYNNYYYYYYYYYYYNN","YYYYYYYYYYYYYYYYYYYYYYYYYYYYNN"};
		p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
		p3 = 522891760ll;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
	}

	{
		// ----- test 5 -----
		p0 = 8;
		p1 = 8;
		string t2[] = {};
		p2.assign(t2, t2 + sizeof(t2) / sizeof(t2[0]));
		p3 = 1871589827250ll;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
		// ------------------
	}

	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	} else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// END KAWIGIEDIT TESTING
//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!
