
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

class TeamPhoto {
public:
    int minDiff(vector <int> hs) {
        int N = hs.size();
        int L = N-3;
        sort(hs.begin()+3, hs.end());
        if (L%2 == 0) return calc(hs, N, L/2);
        return min(calc(hs, N, L/2), calc(hs, N, L-L/2));
    }

    int calc(vector <int> & hs, int n, int s) {
        int d1 = diff(hs[1], hs[3], hs[3+s-1], hs[0]) + diff(hs[0], hs[3+s], hs[n-1], hs[2]);
        int d2 = diff(hs[2], hs[3], hs[3+s-1], hs[0]) + diff(hs[0], hs[3+s], hs[n-1], hs[1]);
        int res = (d1<d2)?d1:d2;
        for (int i = 3; i < 3+s-1; i++)
            res += (hs[i+1]-hs[i]);
        for (int i = 3+s; i < n-1; i++)
            res += (hs[i+1]-hs[i]);
        return res;
    }

    int diff(int l, int m1, int m2, int r) {
        if (l < r)
            return abs(l-m1) + abs(m2-r);
        return abs(l-m2) + abs(m1-r);
    }
};


// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.8 (beta) modified by pivanof
#include <iostream>
#include <string>
#include <vector>
using namespace std;
bool KawigiEdit_RunTest(int testNum, vector <int> p0, bool hasAnswer, int p1) {
    cout << "Test " << testNum << ": [" << "{";
    for (int i = 0; int(p0.size()) > i; ++i) {
        if (i > 0) {
            cout << ",";
        }
        cout << p0[i];
    }
    cout << "}";
    cout << "]" << endl;
    TeamPhoto *obj;
    int answer;
    obj = new TeamPhoto();
    clock_t startTime = clock();
    answer = obj->minDiff(p0);
    clock_t endTime = clock();
    delete obj;
    bool res;
    res = true;
    cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
    if (hasAnswer) {
        cout << "Desired answer:" << endl;
        cout << "\t" << p1 << endl;
    }
    cout << "Your answer:" << endl;
    cout << "\t" << answer << endl;
    if (hasAnswer) {
        res = answer == p1;
    }
    if (!res) {
        cout << "DOESN'T MATCH!!!!" << endl;
    } else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
        cout << "FAIL the timeout" << endl;
        res = false;
    } else if (hasAnswer) {
        cout << "Match :-)" << endl;
    } else {
        cout << "OK, but is it right?" << endl;
    }
    cout << "" << endl;
    return res;
}
int main() {
    bool all_right;
    all_right = true;

    vector <int> p0;
    int p1;

    {
        // ----- test 0 -----
        int t0[] = {80,82,81,50,90,65};
        p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
        p1 = 79;
        all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
        // ------------------
    }

    {
        // ----- test 1 -----
        int t0[] = {70,82,91,50,50,50,50,50,50};
        p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
        p1 = 113;
        all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
        // ------------------
    }

    {
        // ----- test 2 -----
        int t0[] = {13,17,11,12,10};
        p0.assign(t0, t0 + sizeof(t0) / sizeof(t0[0]));
        p1 = 10;
        all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
        // ------------------
    }

    if (all_right) {
        cout << "You're a stud (at least on the example cases)!" << endl;
    } else {
        cout << "Some of the test cases had errors." << endl;
    }
    return 0;
}
// END KAWIGIEDIT TESTING
//Powered by KawigiEdit 2.1.8 (beta) modified by pivanof!
